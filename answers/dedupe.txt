-- Q6 dedupe.sql
.read ../nyc_transit/target/compiled/nyc_transit/analyses/dedupe.sql
/* 
Methodology: use window functions for filtering duplicated columns
1st, generate row number in each row in each partition in the descending order of insert_timestamp.
So, the latest record in a parition will be assigned to row number 1 and so on.
We just need to keep row_number = 1 to keep the latest record
*/

SELECT * FROM "main"."main"."events"
QUALIFY row_number() OVER (PARTITION BY event_id ORDER BY insert_timestamp DESC) = 1
┌──────────────────┬──────────┬────────────┬─────────┬──────────────────┐
│ insert_timestamp │ event_id │ event_type │ user_id │ event_timestamp  │
│     varchar      │ varchar  │  varchar   │  int32  │     varchar      │
├──────────────────┼──────────┼────────────┼─────────┼──────────────────┤
│ 23/07/2022 22:40 │ C        │ Land       │       5 │ 23/07/2022 22:48 │
│ 23/07/2022 23:24 │ A        │ Click      │       1 │ 23/07/2022 22:15 │
│ 23/07/2022 22:55 │ D        │ Click      │       5 │ 23/07/2022 23:34 │
│ 24/07/2022 00:21 │ G        │ Buy        │       5 │ 24/07/2022 02:29 │
│ 23/07/2022 23:52 │ E        │ Buy        │       1 │ 24/07/2022 00:26 │
│ 24/07/2022 00:07 │ F        │ Click      │       5 │ 24/07/2022 01:23 │
│ 23/07/2022 23:09 │ B        │ Buy        │       3 │ 23/07/2022 23:37 │
└──────────────────┴──────────┴────────────┴─────────┴──────────────────┘
